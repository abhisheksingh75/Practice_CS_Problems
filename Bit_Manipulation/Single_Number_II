"""
Single Number II
Given an array of integers, every element appears thrice except for one which occurs once. Find that element which does not appear thrice. Note: Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory? Example :
Input : [1, 2, 4, 3, 3, 2, 2, 3, 1, 1]
Output : 4

"""
class Solution:
    # @param A : tuple of integers
    # @return an integer
    def singleNumber(self, A):
        countofBits = [0]*32
        uniquenumber = 0
        for i in range(len(A)):
            for k in range(32):
                kthbit = 1<<k
                
                if(A[i]&kthbit == kthbit):
                   countofBits[k] += 1
                   
        for i in range(32):
            countofBits[i] =  countofBits[i]%3
            
            if(countofBits[i] == 1):
                uniquenumber = uniquenumber | 1<<i
        
        return uniquenumber
