"""https://www.interviewbit.com/problems/max-non-negative-subarray/
Find out the maximum sub-array of non negative numbers from an array.
The sub-array should be continuous. That is, a sub-array created by choosing the second and fourth element and skipping the third element is invalid.

Maximum sub-array is defined in terms of the sum of the elements in the sub-array. Sub-array A is greater than sub-array B if sum(A) > sum(B).

Example:

A : [1, 2, 5, -7, 2, 3]
The two sub-arrays are [1, 2, 5] [2, 3].
The answer is [1, 2, 5] as its sum is larger than [2, 3]
NOTE: If there is a tie, then compare with segment's length and return segment which has maximum length
NOTE 2: If there is still a tie, then return the segment with minimum starting index
"""
class Solution:
    # @param A : list of integers
    # @return a list of integers
     def maxset(self, A):
        sum = 0
        max_sum = 0
        sub_array = []
        max_sub_array = []
        for idx,ele in enumerate(A):
            if ele >= 0:
                sum += ele
                sub_array.append(ele)
            if ele < 0 or idx == len(A)-1:
                if(sum > max_sum):
                    max_sum = sum 
                    max_sub_array = sub_array
                elif(sum == max_sum):
                  if(len(sub_array) > len(max_sub_array)):
                    max_sum = sum 
                    max_sub_array = sub_array    
                sum = 0
                sub_array = []

        return max_sub_array
